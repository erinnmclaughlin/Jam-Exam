// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

namespace Server.Data.Migrations
{
    [DbContext(typeof(JamExamContext))]
    partial class JamExamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Server.Data.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("UserId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Server.Data.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpotifyPlaylistId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("48791fb6-3f37-4d5c-b53f-d17aa6cbd0de"),
                            Name = "Classic Rock",
                            SpotifyPlaylistId = "37i9dQZF1DWXRqgorJj26U"
                        },
                        new
                        {
                            Id = new Guid("0dc30e8f-cb63-4529-a8c3-28b9d3b1989f"),
                            Name = "Indie",
                            SpotifyPlaylistId = "37i9dQZF1DX2Nc3B70tvx0"
                        },
                        new
                        {
                            Id = new Guid("f4bc73ac-11f9-4d19-85a2-14a7440f4836"),
                            Name = "Pop",
                            SpotifyPlaylistId = "37i9dQZF1DXcBWIGoYBM5M"
                        },
                        new
                        {
                            Id = new Guid("db843015-c517-40ef-b64c-1dee3cbcd8c9"),
                            Name = "Hip Hop",
                            SpotifyPlaylistId = "37i9dQZF1DX0XUsuxWHRQd"
                        },
                        new
                        {
                            Id = new Guid("546318a6-07d4-480f-b2b8-16aa48c9751e"),
                            Name = "Country",
                            SpotifyPlaylistId = "37i9dQZF1DX1lVhptIYRda"
                        },
                        new
                        {
                            Id = new Guid("3b749fe0-670a-4cac-9011-79beeddad10d"),
                            Name = "1960s",
                            SpotifyPlaylistId = "37i9dQZF1DWWzBc3TOlaAV"
                        },
                        new
                        {
                            Id = new Guid("ac092197-62a2-4080-bd29-e5d47fc70257"),
                            Name = "1970s",
                            SpotifyPlaylistId = "37i9dQZF1DWTJ7xPn4vNaz"
                        },
                        new
                        {
                            Id = new Guid("bee6ef2b-14ec-4ce6-8da3-a07e4e8cbb08"),
                            Name = "1980s",
                            SpotifyPlaylistId = "37i9dQZF1DX4UtSsGT1Sbe"
                        },
                        new
                        {
                            Id = new Guid("babdb4d0-9e06-4fcd-be9c-936a95d265da"),
                            Name = "1990s",
                            SpotifyPlaylistId = "37i9dQZF1DXbTxeAdrVG2l"
                        },
                        new
                        {
                            Id = new Guid("4b97be12-5b08-4e00-a58a-d61156bb76af"),
                            Name = "2000s",
                            SpotifyPlaylistId = "37i9dQZF1DX4o1oenSJRJd"
                        });
                });

            modelBuilder.Entity("Server.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpotifyUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Server.Data.Entities.UserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiresOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Server.Data.Entities.Game", b =>
                {
                    b.HasOne("Server.Data.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Server.Data.Entities.UserToken", b =>
                {
                    b.HasOne("Server.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
