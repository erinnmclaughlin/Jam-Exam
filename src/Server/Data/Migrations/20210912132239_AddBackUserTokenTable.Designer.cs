// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

namespace Server.Data.Migrations
{
    [DbContext(typeof(JamContext))]
    [Migration("20210912132239_AddBackUserTokenTable")]
    partial class AddBackUserTokenTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Server.Data.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("UserId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Server.Data.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpotifyPlaylistId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aed3ddfe-6ba1-48c9-9b08-042365e55954"),
                            Name = "Classic Rock",
                            SpotifyPlaylistId = "37i9dQZF1DWXRqgorJj26U"
                        },
                        new
                        {
                            Id = new Guid("8d2699ef-f3c0-4e80-9eea-6f7bda902ef1"),
                            Name = "Indie",
                            SpotifyPlaylistId = "37i9dQZF1DX2Nc3B70tvx0"
                        },
                        new
                        {
                            Id = new Guid("723b6836-1911-4785-8cbb-c0f857de775e"),
                            Name = "Pop",
                            SpotifyPlaylistId = "37i9dQZF1DXcBWIGoYBM5M"
                        },
                        new
                        {
                            Id = new Guid("9ad81caa-abb3-44a7-a6cb-2dbb1bfb0279"),
                            Name = "Hip Hop",
                            SpotifyPlaylistId = "37i9dQZF1DX0XUsuxWHRQd"
                        },
                        new
                        {
                            Id = new Guid("8a2bb8f0-a0fa-4379-8d4e-f2ab5efd244c"),
                            Name = "Country",
                            SpotifyPlaylistId = "37i9dQZF1DX1lVhptIYRda"
                        },
                        new
                        {
                            Id = new Guid("2f63ceca-d59f-48bc-a27b-172aa1b6751e"),
                            Name = "1960s",
                            SpotifyPlaylistId = "37i9dQZF1DWWzBc3TOlaAV"
                        },
                        new
                        {
                            Id = new Guid("a4148812-875f-474d-8082-391ce3448fc5"),
                            Name = "1970s",
                            SpotifyPlaylistId = "37i9dQZF1DWTJ7xPn4vNaz"
                        },
                        new
                        {
                            Id = new Guid("98744f94-53b6-469c-a9ec-da9fc3dd8838"),
                            Name = "1980s",
                            SpotifyPlaylistId = "37i9dQZF1DX4UtSsGT1Sbe"
                        },
                        new
                        {
                            Id = new Guid("fae6ccda-cf87-476c-8261-5e31f7806a71"),
                            Name = "1990s",
                            SpotifyPlaylistId = "37i9dQZF1DXbTxeAdrVG2l"
                        },
                        new
                        {
                            Id = new Guid("0401158a-915a-4814-89ce-483e2709373c"),
                            Name = "2000s",
                            SpotifyPlaylistId = "37i9dQZF1DX4o1oenSJRJd"
                        });
                });

            modelBuilder.Entity("Server.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpotifyUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Server.Data.Entities.UserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiresOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Server.Data.Entities.Game", b =>
                {
                    b.HasOne("Server.Data.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Server.Data.Entities.UserToken", b =>
                {
                    b.HasOne("Server.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
