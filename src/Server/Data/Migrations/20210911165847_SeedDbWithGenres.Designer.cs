// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

namespace Server.Data.Migrations
{
    [DbContext(typeof(JamExamContext))]
    [Migration("20210911165847_SeedDbWithGenres")]
    partial class SeedDbWithGenres
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Server.Data.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("UserId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Server.Data.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpotifyPlaylistId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdba9497-15f2-4bab-a77f-6890606d590a"),
                            Name = "Classic Rock",
                            SpotifyPlaylistId = "37i9dQZF1DWXRqgorJj26U"
                        },
                        new
                        {
                            Id = new Guid("0c976168-092f-46e8-8793-c9203761a9a7"),
                            Name = "Indie",
                            SpotifyPlaylistId = "37i9dQZF1DX2Nc3B70tvx0"
                        },
                        new
                        {
                            Id = new Guid("40a3e349-7bcd-430e-b09a-e0ee798655a3"),
                            Name = "Pop",
                            SpotifyPlaylistId = "37i9dQZF1DXcBWIGoYBM5M"
                        },
                        new
                        {
                            Id = new Guid("220130da-e7a3-469d-aee3-e066bb03a868"),
                            Name = "Hip Hop",
                            SpotifyPlaylistId = "37i9dQZF1DX0XUsuxWHRQd"
                        },
                        new
                        {
                            Id = new Guid("2c6e0ea7-5c56-4501-966f-0c7e624b4444"),
                            Name = "Country",
                            SpotifyPlaylistId = "37i9dQZF1DX1lVhptIYRda"
                        },
                        new
                        {
                            Id = new Guid("89518d23-4046-4d0a-aeec-9672cfcae5cb"),
                            Name = "1960s",
                            SpotifyPlaylistId = "37i9dQZF1DWWzBc3TOlaAV"
                        },
                        new
                        {
                            Id = new Guid("ad552299-a5d0-4258-b6e3-a91ea0e953fb"),
                            Name = "1970s",
                            SpotifyPlaylistId = "37i9dQZF1DWTJ7xPn4vNaz"
                        },
                        new
                        {
                            Id = new Guid("71efb072-1c82-4735-bd15-b20e71adeb41"),
                            Name = "1980s",
                            SpotifyPlaylistId = "37i9dQZF1DX4UtSsGT1Sbe"
                        },
                        new
                        {
                            Id = new Guid("8fd662ae-1cab-4063-838d-eb2ee9a7f47c"),
                            Name = "1990s",
                            SpotifyPlaylistId = "37i9dQZF1DXbTxeAdrVG2l"
                        },
                        new
                        {
                            Id = new Guid("9767f1c3-07e2-4089-a4d3-be57e1033897"),
                            Name = "2000s",
                            SpotifyPlaylistId = "37i9dQZF1DX4o1oenSJRJd"
                        });
                });

            modelBuilder.Entity("Server.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpotifyUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Server.Data.Entities.Game", b =>
                {
                    b.HasOne("Server.Data.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
